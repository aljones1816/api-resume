version: "3"
services:
  app:
    build: .
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_HOST: db # Use the internal service name for DB connection
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_MAX: $POSTGRES_MAX
      POSTGRES_IDLE_TIMEOUT: $POSTGRES_IDLE_TIMEOUT
      POSTGRES_CONNECTION_TIMEOUT: $POSTGRES_CONNECTION_TIMEOUT
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

  db:
    image: postgres:latest
    container_name: api-resume-postgres
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/nginx/ssl/resume.alanjones.dev/domain.cert.pem:/etc/nginx/ssl/resume.alanjones.dev/domain.cert.pem
      - /etc/nginx/ssl/resume.alanjones.dev/private.key.pem:/etc/nginx/ssl/resume.alanjones.dev/private.key.pem
      - /etc/nginx/ssl/resume.alanjones.dev/intermediate.cert.pem:/etc/nginx/ssl/resume.alanjones.dev/intermediate.cert.pem
    depends_on:
      - app
    networks:
      - backend
      - frontend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
