events {}

http {
    # Server for HTTP (only to redirect to HTTPS)
    server {
        listen 80;
        server_name resume.alanjones.dev;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    # Server for HTTPS
    server {
        listen 443 ssl;
        server_name resume.alanjones.dev;

        ssl_certificate /etc/nginx/ssl/resume.alanjones.dev/domain.cert.pem;
        ssl_certificate_key /etc/nginx/ssl/resume.alanjones.dev/private.key.pem;
        ssl_trusted_certificate /etc/nginx/ssl/resume.alanjones.dev/intermediate.cert.pem;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305';
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://app:3001;  # Forward requests to the Node app
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
